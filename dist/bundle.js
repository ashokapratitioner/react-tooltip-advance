!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define("react-tooltip-advance",["React"],t):"object"==typeof exports?exports["react-tooltip-advance"]=t(require("react")):e["react-tooltip-advance"]=t(e.React)}(self,(e=>(()=>{"use strict";var t={639:t=>{t.exports=e}},r={};function o(e){var n=r[e];if(void 0!==n)return n.exports;var a=r[e]={exports:{}};return t[e](a,a.exports,o),a.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{o.r(n),o.d(n,{default:()=>r});var e=o(639),t=o.n(e);const r={ReactTooltip:({displayText:r,tooltipText:o})=>{const n=(0,e.useRef)(null);let a;return r?t().createElement("div",{className:"react-tooltip-container"},t().createElement("p",{className:"text-container",ref:e=>{a=e},onMouseOver:e=>{let t=e.clientX,r=e.clientY;n.current.style.top=r+10+"px",n.current.style.left=t+10+"px",n.current.style.opacity=1}},r),t().createElement("span",{className:"tooltip-container",ref:n},o)):t().createElement(t().Fragment,null)}}})(),n})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,